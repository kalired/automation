# Define the domain information
$domain = "yourdomain.com"
$domainUser = "yourdomain\administrator"
$encryptedPassword = "<encrypted_password_here>"

# Path to the file containing the list of remote computers
$computerListPath = "C:\temp\computer_list.txt"

# Convert the encrypted password from base64
$securePassword = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($encryptedPassword))

# Read the computer names from the file
$computerNames = Get-Content -Path $computerListPath

# Loop through each computer name and connect using local credentials
foreach ($computerName in $computerNames) {
    Write-Host "Connecting to $computerName using local credentials..."

    # Create a credential object using local credentials
    $credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $env:USERNAME, (ConvertTo-SecureString -String $env:USERPASSWORD -AsPlainText -Force)

    try {
        # Connect to the remote computer using local credentials
        $session = New-PSSession -ComputerName $computerName -Credential $credential

        Write-Host "Connected to $computerName."

        # Invoke a script block on the remote session to join the machine to the domain and restart
        Invoke-Command -Session $session -ScriptBlock {
            param (
                $domain,
                $domainUser,
                $securePassword
            )

            # Decrypt the secure password
            $password = ConvertTo-SecureString -String $securePassword -Key (1..16)

            # Join the machine to the domain
            Add-Computer -DomainName $domain -Credential $domainUser -Restart -Force -PassThru -ErrorAction Stop

        } -ArgumentList $domain, $domainUser, $securePassword

        Write-Host "Successfully joined $computerName to the domain."

    } catch {
        Write-Host "Failed to connect or join $computerName to the domain. Error: $_" -ForegroundColor Red
    } finally {
        # Close the session
        if ($session) {
            Remove-PSSession -Session $session
        }
    }
}
