# filters/cdp_parser.py

def parse_cdp_neighbors(cdp_output):
    neighbors = []
    lines = cdp_output.splitlines()
    for line in lines:
        if line.startswith('Device ID:'):
            neighbor = {}
            neighbor['device_id'] = line.split('Device ID: ')[1].strip()
        elif line.startswith('IP address:'):
            neighbor['ip_address'] = line.split('IP address: ')[1].strip()
        elif line.startswith('Platform:'):
            neighbor['platform'] = line.split('Platform: ')[1].strip()
        elif line.startswith('Interface:'):
            neighbor['interface'] = line.split('Interface: ')[1].strip()
        elif line.startswith('Port ID (outgoing port):'):
            neighbor['port_id'] = line.split('Port ID (outgoing port): ')[1].strip()
            neighbors.append(neighbor)
    return neighbors

class FilterModule(object):
    def filters(self):
        return {
            'parse_cdp_neighbors': parse_cdp_neighbors
        }

To use this filter, follow these steps:

Create a new directory named filters in your Ansible playbook directory.
Inside the filters directory, create a file named cdp_parser.py.
Copy the above code into the cdp_parser.py file.
In your playbook, ensure that you have the path to the filters directory specified in the filter_plugins configuration option. For example:

---
- name: Search CDP Neighbors
  hosts: switches
  gather_facts: no
  filter_plugins:
    - ./filters

  tasks:
    - name: Show CDP neighbors
      ios_command:
        commands: show cdp neighbors detail
      register: cdp_output

    - name: Parse CDP output
      set_fact:
        cdp_neighbors: "{{ cdp_output.stdout[0] | parse_cdp_neighbors }}"

    - name: Display CDP neighbors
      debug:
        var: cdp_neighbors
Now, when you execute the playbook, the parse_cdp_neighbors filter will be available, and it will parse the CDP output into a structured format. The resulting cdp_neighbors variable will contain a list of dictionaries, each representing a CDP neighbor with details such as device ID, IP address, platform, interface, and port ID.

Make sure to adjust the playbook and filter path as per your specific setup.
